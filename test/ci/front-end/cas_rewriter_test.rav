field f: Library.Nat

func g(x: Ref) 
  returns (y: Ref)
{ x }

inv my_inv(x: Ref) {
  true
}

proc p(x:Ref) 
  requires my_inv(x)
  requires own(x, f, 1)
{
  // x.f := 0;
  unfold my_inv(x);
  ghost var b : Bool := CAS(x.f, 0, 5);
  // var b1 : Bool := CAS(g(x).f, 0, 5);
  // var b: Int := g(x).f;
  // var b1: Int := x.f;
  fold my_inv(x);
  // assert (b == true);
}